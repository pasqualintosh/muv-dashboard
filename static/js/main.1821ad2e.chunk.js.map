{"version":3,"sources":["services/history.js","screens/Welcome/Welcome.js","components/NoLoginHeader/NoLoginHeader.js","domains/user/ActionCreator.js","domains/user/ActionTypes.js","screens/Login/Login.js","routes/Route.js","components/BarGraph/BarGraph.js","components/Map/Map.js","components/DoughnutGraph/DoughnutGraph.js","screens/Charts/Charts.js","components/Map/WalkingTrip.js","screens/Palermo/Palermo.js","routes/index.js","components/Header/Header.js","components/Layout/Layout.js","App.js","serviceWorker.js","domains/user/DefaultState.js","store.js","domains/user/Reducers.js","index.js"],"names":["history","createBrowserHistory","Welcome","Container","Row","className","Col","xs","lg","Component","NoLoginHeader","connect","state","userState","user","withData","href","login","console","log","dispatch","getState","a","type","payload","error","Login","handleClick","e","props","placeholder","required","autoFocus","value","onClick","this","RouteWrapper","component","rest","isPrivate","monthRoute","route_array_polyline","initialState","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","BarGraph","DoughnutGraph","start_point","route_array_with_gps","routesId","map","allTrip","filter","trip","route_id","id","el","index","lat","lon","Polyline","key","color","Math","random","toString","positions","MapComponent","Map","center","zoom","TileLayer","url","attribution","Charts","geo_json_initialited","geoJson","Promise","resolve","reject","walking_palermo_id","properties","modal_type","geometry","coordinates","walking_palermo","initFirstPromise","then","d","setState","features","GeoJSON","style","geoJsonFeature","weight","opacity","Spinner","animation","variant","Routes","path","exact","Palermo","Header","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Layout","children","App","Boolean","window","location","hostname","match","logged","storeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","rootReducer","combineReducers","DefaultState","action","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1821ad2e.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\nexport default history;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport \"./Welcome.css\";\n\nclass Welcome extends Component {\n  render() {\n    return (\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <Col xs lg=\"2\">\n            Welcome screen\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst withData = connect((state) => {\n  return {\n    userState: state.user,\n  };\n});\n\nexport default withData(Welcome);\n\n// export default Welcome;\n","import React, { Component } from \"react\";\n\nclass NoLoginHeader extends Component {\n  render() {\n    return (\n      <header>\n        <a href=\"#default\">CompanyLogo</a>\n        <nav>\n          <a href=\"#home\">Home</a>\n          <a href=\"#contact\">Contact</a>\n          <a href=\"#about\">About</a>\n        </nav>\n      </header>\n    );\n  }\n}\n\nexport default NoLoginHeader;\n","import { LOGIN } from \"./ActionTypes\";\n\nexport function login() {\n  console.log(\"login\");\n  return async function (dispatch, getState) {\n    try {\n      dispatch({\n        type: LOGIN,\n        payload: {},\n      });\n    } catch (error) {\n      console.log(\"error\");\n    }\n  };\n}\n","export const LOGIN = \"LOGIN\";\n","import React, { Component } from \"react\";\nimport NoLoginHeader from \"./../../components/NoLoginHeader/NoLoginHeader\";\nimport { connect } from \"react-redux\";\nimport { login } from \"./../../domains/user/ActionCreator\";\nimport \"./Login.css\";\n\nclass Login extends Component {\n  handleClick = (e) => {\n    console.log(e);\n    this.props.dispatch(login());\n  };\n\n  render() {\n    return (\n      <div className=\"Form\">\n        <NoLoginHeader></NoLoginHeader>\n        <form>\n          <h1>Please sign in</h1>\n          <label>Email address</label>\n          <input type=\"email\" placeholder=\"Email address\" required autoFocus />\n          <label>Password</label>\n          <input type=\"password\" placeholder=\"Password\" required />\n          <div>\n            <label>\n              <input type=\"checkbox\" value=\"remember-me\" /> Remember me\n            </label>\n          </div>\n          <button type=\"submit\" onClick={this.handleClick}>\n            Sign in\n          </button>\n          <p>&copy; 2020</p>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst withData = connect((state) => {\n  return {\n    userState: state.user,\n  };\n});\n\nexport default withData(Login);\n\n// export default Login;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  const signed = false;\n  /**\n   * Redirect user to SignIn page if he tries to access a private      route\n   * without authentication.\n   */\n  // if (isPrivate && !signed) {\n  //   return <Redirect to=\"/login\" />;\n  // }\n  /**\n   * Redirect user to Main page if he tries to access a non private route\n   * (SignIn or SignUp) after being authenticated.\n   */\n  // if (!isPrivate && signed) {\n  //   return <Redirect to=\"/dashboard\" />;\n  // }\n\n  /**\n   * If not included on both previous cases, redirect user to the desired route.\n   */\n  return <Route {...rest} component={Component} />;\n}\n\n// RouteWrapper.propTypes = {\n//   isPrivate: PropTypes.bool,\n//   component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n//     .isRequired,\n// };\n// RouteWrapper.defaultProps = {\n//   isPrivate: false,\n// };\n","import React, { Component } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport * as monthRoute from \"./../../data/month_route.json\";\n\nconsole.log(monthRoute.default);\n\nlet data = [];\n// monthRoute.default.forEach((e, i) => {\n//   console.log(e);\n//   console.log(i);\n// });\n\nconst initialState = {\n  labels: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n  datasets: [\n    {\n      label: \"Routes travaled in 2019\",\n      backgroundColor: \"rgba(255,99,132,0.2)\",\n      borderColor: \"rgba(255,99,132,1)\",\n      borderWidth: 1,\n      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n      hoverBorderColor: \"rgba(255,99,132,1)\",\n      data: [\n        2071,\n        1877,\n        2677,\n        2412,\n        4770,\n        7336,\n        5412,\n        3526,\n        5535,\n        8206,\n        6058,\n        3912,\n      ],\n    },\n  ],\n};\n\nclass BarGraph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...initialState };\n  }\n\n  render() {\n    return <Bar data={this.state} />;\n  }\n}\n\nexport default BarGraph;\n","import React, { Component } from \"react\";\nimport { Map, TileLayer, Polyline } from \"react-leaflet\";\nimport * as routesId from \"./../../data/allroute.json\";\nimport * as allTrip from \"./../../data/alltrip.json\";\nimport \"./Map.css\";\n\nlet start_point = [0, 0];\nlet route_array_polyline = null;\n\nlet route_array_with_gps = routesId.default.map((e) => {\n  return allTrip.default\n    .filter((trip) => trip.route_id === e.id)\n    .map((el, index) => {\n      if (index === 50) start_point = [el.lat, el.lon];\n      return [el.lat, el.lon];\n    });\n});\n\nroute_array_polyline = route_array_with_gps.map((el, index) => {\n  return (\n    <Polyline\n      key={index}\n      color={\"#\" + (((1 << 24) * Math.random()) | 0).toString(16)}\n      positions={el}\n    />\n  );\n});\n\nclass MapComponent extends Component {\n  render() {\n    return (\n      <Map center={start_point} zoom={12}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {route_array_polyline ? route_array_polyline : <div />}\n      </Map>\n    );\n  }\n}\n\nexport default MapComponent;\n","import React, { Component } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nconst data = {\n  labels: [\"Walk\", \"Bike\", \"Bus\"],\n  datasets: [\n    {\n      data: [31572, 14843, 2238],\n      backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n      hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n    },\n  ],\n};\n\nclass DoughnutGraph extends Component {\n  render() {\n    return <Doughnut data={data} />;\n  }\n}\n\nexport default DoughnutGraph;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport BarGraph from \"./../../components/BarGraph/BarGraph\";\nimport DoughnutGraph from \"./../../components/DoughnutGraph/DoughnutGraph\";\nimport Map from \"./../../components/Map/Map\";\n\nclass Charts extends Component {\n  render() {\n    return (\n      <Container>\n        <hr></hr>\n        <Row className=\"justify-content-md-center\">\n          <Col>\n            <h6>Routes travaled in 2019</h6>\n            <BarGraph />\n          </Col>\n        </Row>\n        <hr></hr>\n        <Row className=\"justify-content-md-center\">\n          <Col>\n            <h6>Routes travaled in Palermo</h6>\n            <Map />\n          </Col>\n        </Row>\n        <hr></hr>\n        <Row className=\"justify-content-md-center\">\n          <Col>\n            <h6>Number of routes travaled and used means</h6>\n            <DoughnutGraph />\n          </Col>\n        </Row>\n        <hr></hr>\n      </Container>\n    );\n  }\n}\n\nexport default Charts;\n","import React, { Component } from \"react\";\nimport { Map, TileLayer, Polyline, GeoJSON } from \"react-leaflet\";\nimport { Spinner } from \"react-bootstrap\";\nimport * as walking_palermo_id from \"./../../data/palermo.json\";\nimport * as walking_palermo from \"./../../data/walking_palermo.json\";\nimport \"./Map.css\";\n\nclass MapComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      geo_json_initialited: false,\n      geoJson: {},\n    };\n\n    this.start_point = [0, 0];\n  }\n\n  initFirstPromise() {\n    this.route_array_with_gps = new Promise((resolve, reject) => {\n      try {\n        let data = walking_palermo_id.default.map((e) => {\n          return {\n            type: \"Feature\",\n            properties: { modal_type: e.modal_type, id: e.id },\n            geometry: {\n              type: \"LineString\",\n              coordinates: [\n                ...walking_palermo.default\n                  .filter((trip) => trip.route_id === e.id)\n                  .map((el, index) => {\n                    if (index === 50) this.start_point = [el.lat, el.lon];\n                    return [el.lon, el.lat];\n                  }),\n              ],\n            },\n          };\n        });\n        resolve({\n          data,\n        });\n      } catch (error) {\n        reject({ error });\n      }\n    });\n  }\n\n  initSecondPromise() {\n    this.route_array_polyline = new Promise((resolve, reject) => {\n      try {\n        resolve({\n          data: this.state.route_array_with_gps.map((el, index) => {\n            return (\n              <Polyline\n                key={index}\n                color={\"#\" + (((1 << 24) * Math.random()) | 0).toString(16)}\n                positions={el}\n              />\n            );\n          }),\n        });\n      } catch (error) {\n        reject({ error });\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.initFirstPromise();\n\n    this.route_array_with_gps.then((d) => {\n      this.setState({\n        geo_json_initialited: true,\n        geoJson: {\n          type: \"FeatureCollection\",\n          features: [...d.data],\n        },\n      });\n      console.log(this.state);\n    });\n  }\n\n  render() {\n    if (this.state.geo_json_initialited)\n      return (\n        <Map center={this.start_point} zoom={12}>\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          />\n          <GeoJSON\n            data={this.state.geoJson}\n            style={function (geoJsonFeature) {\n              switch (geoJsonFeature.properties.modal_type) {\n                case 1:\n                  return { color: \"#6CBA7E\", weight: 5, opacity: 0.65 };\n                case 2:\n                  return { color: \"#FAB21E\", weight: 5, opacity: 0.65 };\n                case 3:\n                  return { color: \"#BA0043\", weight: 5, opacity: 0.65 };\n                case 4:\n                  return { color: \"#BA0043\", weight: 5, opacity: 0.65 };\n                case 5:\n                  return { color: \"#BA0043\", weight: 5, opacity: 0.65 };\n                case 6:\n                  return { color: \"#BA0043\", weight: 5, opacity: 0.65 };\n                default:\n                  return { color: \"#6CBA7E\", weight: 5, opacity: 0.65 };\n              }\n            }}\n          />\n        </Map>\n      );\n    else return <Spinner animation=\"border\" variant=\"primary\" />;\n  }\n}\n\nexport default MapComponent;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport BarGraph from \"./../../components/BarGraph/BarGraph\";\nimport DoughnutGraph from \"./../../components/DoughnutGraph/DoughnutGraph\";\nimport Map from \"./../../components/Map/WalkingTrip\";\n\nclass Charts extends Component {\n  render() {\n    return (\n      <Container>\n        <hr></hr>\n        <Row className=\"justify-content-md-center\">\n          <Col>\n            <h6>Routes travaled in Palermo</h6>\n            <Map />\n          </Col>\n        </Row>\n        <hr></hr>\n      </Container>\n    );\n  }\n}\n\nexport default Charts;\n","import React, { Component } from \"react\";\n// import { Switch, Route } from \"react-router-dom\";\nimport { Switch } from \"react-router-dom\";\nimport Welcome from \"./../screens/Welcome/Welcome\";\nimport Login from \"./../screens/Login/Login\";\nimport RouteWrapper from \"./Route\";\nimport Charts from \"./../screens/Charts/Charts\";\nimport Palermo from \"./../screens/Palermo/Palermo\";\n\nclass Routes extends Component {\n  render() {\n    return (\n      <Switch>\n        <RouteWrapper path=\"/\" exact component={Palermo} />\n        <RouteWrapper path=\"/login\" exact component={Login} />\n        <RouteWrapper path=\"/charts\" exact component={Charts} />\n        <RouteWrapper path=\"/palermo\" exact component={Palermo} />\n      </Switch>\n    );\n  }\n}\n\nexport default Routes;\n","import React, { Component } from \"react\";\nimport {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Form,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">Muv Dashboard</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {/* <Nav.Link href=\"/\">Home</Nav.Link> */}\n            {/* <Nav.Link href=\"/charts\">Charts</Nav.Link>\n            <Nav.Link href=\"/about\">About</Nav.Link> */}\n            {/* \n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                Another action\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">\n                Separated link\n              </NavDropdown.Item>\n            </NavDropdown> \n            */}\n          </Nav>\n          {/* <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"outline-success\">Search</Button>\n          </Form> */}\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Header from \"./../Header/Header\";\n\nexport const Layout = (props) => (\n  <Container>\n    <Header />\n    {props.children}\n  </Container>\n);\n","import React, { Component } from \"react\";\nimport { Router } from \"react-router-dom\";\nimport history from \"./services/history\";\nimport Routes from \"./routes/index\";\nimport { Layout } from \"./components/Layout/Layout\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Router history={history}>\n        <Layout>\n          <Routes />\n        </Layout>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const state = { logged: false };\n\nexport default state;\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport userReducer from \"./domains/user/Reducers\";\nimport thunk from \"redux-thunk\";\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middleware = [thunk];\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  storeEnhancers(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import DefaultState from \"./DefaultState\";\nimport { LOGIN } from \"./ActionTypes\";\n\nexport default (state = DefaultState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return { ...state, logged: true };\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}